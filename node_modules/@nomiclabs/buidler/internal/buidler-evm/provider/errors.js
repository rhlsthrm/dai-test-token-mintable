"use strict";
// Taken from: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1474.md#error-codes
//
// Code	  Message	              Meaning	                            Category
//
// -32700	Parse error	          Invalid JSON	                      standard
// -32600	Invalid request	      JSON is not a valid request object  standard
// -32601	Method not found	    Method does not exist	              standard
// -32602	Invalid params	      Invalid method parameters	          standard
// -32603	Internal error	      Internal JSON-RPC error	            standard
// -32004	Method not supported	Method is not implemented	          non-standard
//
// Not implemented:
// -32000	Invalid input	        Missing or invalid parameters	      non-standard
// -32001	Resource not found	  Requested resource not found	      non-standard
// -32002	Resource unavailable	Requested resource not available	  non-standard
// -32003	Transaction rejected	Transaction creation failed	        non-standard
Object.defineProperty(exports, "__esModule", { value: true });
class BuidlerEVMProviderError extends Error {
    constructor(message, code) {
        super(message);
        this.code = code;
    }
}
exports.BuidlerEVMProviderError = BuidlerEVMProviderError;
class InvalidJsonInputError extends BuidlerEVMProviderError {
    constructor(message) {
        super(message, -32700);
    }
}
exports.InvalidJsonInputError = InvalidJsonInputError;
class InvalidRequestError extends BuidlerEVMProviderError {
    constructor(message) {
        super(message, -32600);
    }
}
exports.InvalidRequestError = InvalidRequestError;
class MethodNotFoundError extends BuidlerEVMProviderError {
    constructor(message) {
        super(message, -32601);
    }
}
exports.MethodNotFoundError = MethodNotFoundError;
class InvalidArgumentsError extends BuidlerEVMProviderError {
    constructor(message) {
        super(message, -32602);
    }
}
exports.InvalidArgumentsError = InvalidArgumentsError;
class InternalError extends BuidlerEVMProviderError {
    constructor(message) {
        super(message, -32603);
    }
}
exports.InternalError = InternalError;
class InvalidInputError extends BuidlerEVMProviderError {
    constructor(message) {
        super(message, -32000);
    }
}
exports.InvalidInputError = InvalidInputError;
class MethodNotSupportedError extends BuidlerEVMProviderError {
    constructor(message) {
        super(message, -32004);
    }
}
exports.MethodNotSupportedError = MethodNotSupportedError;
//# sourceMappingURL=errors.js.map